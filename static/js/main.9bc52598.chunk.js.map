{"version":3,"sources":["components/Tasks/TasksList.js","components/Tasks/TextBar.js","components/Tasks/TasksManager.js","components/Layout/ModeButton.js","components/Layout/DisplayCard.js","App.js","index.js","components/Tasks/TextBar.module.css","components/Layout/DisplayCard.module.css","components/Tasks/TasksList.module.css","components/Layout/ModeButton.module.css"],"names":["TasksList","props","textColor","mode","List","className","classes","list","map","item","textDecorationLine","flag","textDecorationStyle","ListItem","button","divider","secondaryAction","IconButton","edge","onClick","removeTask","editTask","ListItemButton","role","toggleHandler","ListItemIcon","Checkbox","checked","indexOf","ListItemText","style","color","text","Divider","Math","random","toString","TextBar","useState","currentInput","setCurrentInput","TextField","onChange","event","target","value","taskbar","id","label","variant","Button","type","addTask","add","startIcon","TasksManager","tasksList","setTasksList","itemText","newArr","push","index","splice","ModeButton","Box","changeMode","DisplayCard","Card","card","CardContent","Typography","fontSize","App","setMode","theme","createTheme","palette","ThemeProvider","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9bc52598.chunk.js","sourcesContent":["import List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport classes from \"./TasksList.module.css\";\r\nimport { Divider } from \"@mui/material\";\r\nimport { Fragment } from \"react\";\r\nconst TasksList = (props) => {\r\n  let textColor = props.mode === \"dark\" ? \"white\" : \"black\";\r\n  return (\r\n    <List className={classes.list}>\r\n      {props.list.map((item) => {\r\n        let textDecorationLine = item.flag === true ? \"line-through\" : \"\";\r\n        let textDecorationStyle = item.flag === true ? \"solid\" : \"\";\r\n        return (\r\n          <ListItem\r\n            button\r\n            divider\r\n            key={Math.random().toString()}\r\n            secondaryAction={\r\n              <Fragment>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"delete\"\r\n                  onClick={props.removeTask(item)}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"edit\"\r\n                  onClick={props.editTask(item)}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </Fragment>\r\n            }\r\n          >\r\n            <ListItemButton role=\"checkbox\" onClick={props.toggleHandler(item)}>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  edge=\"start\"\r\n                  checked={props.list[props.list.indexOf(item)].flag}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                key={props.list.indexOf(item)}\r\n                style={{\r\n                  color: textColor,\r\n                  textDecorationLine: textDecorationLine,\r\n                  textDecorationStyle: textDecorationStyle,\r\n                }}\r\n              >\r\n                {item.text}\r\n              </ListItemText>\r\n            </ListItemButton>\r\n            <Divider />\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default TasksList;\r\n","import classes from \"./TextBar.module.css\";\r\nimport { TextField, Button } from \"@mui/material\";\r\nimport { Fragment, useState } from \"react\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nconst TextBar = (props) => {\r\n  const [currentInput, setCurrentInput] = useState(\"\");\r\n\r\n  const addUserHandler = () => {\r\n    props.addTask(currentInput);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <TextField\r\n        onChange={(event) => setCurrentInput(event.target.value)}\r\n        className={classes.taskbar}\r\n        id=\"outlined-basic\"\r\n        label=\"Write your task\"\r\n        variant=\"outlined\"\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        onClick={addUserHandler}\r\n        className={classes.add}\r\n        variant=\"outlined\"\r\n        startIcon={<AddIcon />}\r\n      >\r\n        Add\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n}; \r\n\r\nexport default TextBar;\r\n","import TasksList from \"./TasksList\";\r\nimport TextBar from \"./TextBar\";\r\nimport { useState, Fragment } from \"react\";\r\n\r\nconst TasksManager = (props) => {\r\n  const [tasksList, setTasksList] = useState([]);\r\n\r\n  const addTaskHandler = (itemText) => {\r\n    const newArr = [...tasksList];\r\n    newArr.push({ text: itemText, flag: false});\r\n    setTasksList(newArr);\r\n  };\r\n\r\n  const toggleHandler = (item) => () => {\r\n    const index = tasksList.indexOf(item);\r\n    const newArr = [...tasksList];\r\n    const flag = newArr[index].flag;\r\n    newArr[index].flag = !flag;\r\n    setTasksList(newArr);\r\n  };\r\n\r\n  const removeTaskHandler = (item) => () => {\r\n    const index = tasksList.indexOf(item);\r\n    const newArr = [...tasksList];\r\n    newArr.splice(index, 1);\r\n    setTasksList(newArr);\r\n  };\r\n\r\n  const editTaskHandler = (item) => () => {\r\n    const index = tasksList.indexOf(item);\r\n    const newArr = [...tasksList];\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <TextBar addTask={addTaskHandler} />\r\n      <TasksList\r\n        list={tasksList}\r\n        tasksList={tasksList}\r\n        toggleHandler={toggleHandler}\r\n        removeTask={removeTaskHandler}\r\n        mode = {props.mode}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TasksManager;\r\n","import { Box } from \"@mui/system\";\r\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\r\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\r\nimport { IconButton } from \"@mui/material\";\r\nimport classes from './ModeButton.module.css';\r\n\r\nconst ModeButton = props => {\r\n    return <Box className = {classes.mode}>\r\n    <IconButton onClick = {props.changeMode}>\r\n    {props.mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\r\n    </IconButton>\r\n    </Box>\r\n};\r\n\r\nexport default ModeButton;","import classes from \"./DisplayCard.module.css\";\r\nimport { Card, CardContent, Typography } from \"@mui/material\";\r\nimport TasksManager from \"../Tasks/TasksManager\";\r\nimport ModeButton from \"./ModeButton\";\r\n\r\nconst DisplayCard = (props) => {\r\n  return (\r\n    <Card className={classes.card}>\r\n      <ModeButton changeMode={props.changeMode} mode={props.mode} />\r\n      <CardContent>\r\n        <Typography style = {{fontSize : 40}}>Today's tasks</Typography>\r\n      </CardContent>\r\n      <TasksManager mode={props.mode} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DisplayCard;\r\n","import {useState} from 'react';\nimport './App.css';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport DisplayCard from './components/Layout/DisplayCard';\nfunction App() {\n  const [mode, setMode] = useState('dark');\n  const theme = createTheme({\n    palette: {\n      mode: mode,\n    },\n  });\n\n  const changeModeHandler = ( ) => {\n      if(mode === 'dark'){\n          setMode('light');\n      }\n      else{\n          setMode('dark');\n      }\n  };\n  \n\n  // return (\n  //   <ThemeProvider theme = {theme}>\n  //   <Box>\n  //   <Header mode = {mode} changeMode = {changeModeHandler}/>\n  //   <TasksManager mode = {mode}/>\n  //   </Box>\n  //   </ThemeProvider>\n  // );\n\n  return (<ThemeProvider theme = {theme}>\n    <DisplayCard mode = {mode} changeMode = {changeModeHandler}/>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskbar\":\"TextBar_taskbar__1oXMF\",\"add\":\"TextBar_add__cju93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"DisplayCard_card__1mbTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TasksList_list__1Fuh3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mode\":\"ModeButton_mode__1XkRe\"};"],"sourceRoot":""}